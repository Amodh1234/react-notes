{"ast":null,"code":"import _toConsumableArray from\"C:/Users/amodh/Downloads/react-notes-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/amodh/Downloads/react-notes-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import\"../styles/NoteView.Module.css\";import NoteHeader from\"./NoteHeader\";import Input from\"./Input\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NoteView=function NoteView(_ref){var name=_ref.name,color=_ref.color,id=_ref.id,isMobile=_ref.isMobile,display=_ref.display,setDisplay=_ref.setDisplay;var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),notes=_React$useState2[0],setNotes=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),groupId=_React$useState4[0],setGroupId=_React$useState4[1];var _React$useState5=React.useState({}),_React$useState6=_slicedToArray(_React$useState5,2),newNote=_React$useState6[0],setNewNote=_React$useState6[1];React.useEffect(function(){var noteGroups=JSON.parse(localStorage.getItem(\"noteGroups\"));var groupIndex=noteGroups.findIndex(function(group){return group.id===id;});if(groupIndex===-1){console.error(\"Group with ID \".concat(id,\" not found\"));return;}var group=noteGroups[groupIndex];setGroupId(group.id);setNotes(_toConsumableArray(group.notes),newNote);console.log(group.notes);},[id,newNote,setNewNote]);var handleNewNote=function handleNewNote(value){console.log(\"new note\");setNewNote(value);setNotes(_toConsumableArray(notes),newNote);};return/*#__PURE__*/_jsxs(\"div\",{className:\"note-view-container flex  justify-start\",style:{display:isMobile&&!display?\"none\":\"\"},children:[/*#__PURE__*/_jsx(NoteHeader,{name:name,color:color,isMobile:isMobile,display:display,setDisplay:setDisplay}),groupId===id&&notes&&notes.map(function(note,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"note-view flex flex-row justify-start \",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"time-contatiner\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"date\",children:note&&note.time.substring(0,4)+note.time.substring(7,11)}),/*#__PURE__*/_jsx(\"p\",{className:\"time\",children:note&&note.date})]}),/*#__PURE__*/_jsx(\"div\",{className:\"note\",children:note.content})]},index);}),notes&&notes.length<=0?/*#__PURE__*/_jsx(\"p\",{className:\"example-txt\",children:\"Start Writing Notes Here!\"}):\"\",/*#__PURE__*/_jsx(Input,{id:id,handleNewNote:handleNewNote})]});};export default NoteView;","map":{"version":3,"names":["React","NoteHeader","Input","jsx","_jsx","jsxs","_jsxs","NoteView","_ref","name","color","id","isMobile","display","setDisplay","_React$useState","useState","_React$useState2","_slicedToArray","notes","setNotes","_React$useState3","_React$useState4","groupId","setGroupId","_React$useState5","_React$useState6","newNote","setNewNote","useEffect","noteGroups","JSON","parse","localStorage","getItem","groupIndex","findIndex","group","console","error","concat","_toConsumableArray","log","handleNewNote","value","className","style","children","map","note","index","time","substring","date","content","length"],"sources":["C:/Users/amodh/Downloads/react-notes-master/src/components/NoteView.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../styles/NoteView.Module.css\";\n\nimport NoteHeader from \"./NoteHeader\";\nimport Input from \"./Input\";\n\nconst NoteView = ({ name, color, id, isMobile, display, setDisplay }) => {\n  const [notes, setNotes] = React.useState([]);\n  const [groupId, setGroupId] = React.useState(\"\");\n  const [newNote, setNewNote] = React.useState({});\n\n  React.useEffect(() => {\n    const noteGroups = JSON.parse(localStorage.getItem(\"noteGroups\"));\n    const groupIndex = noteGroups.findIndex((group) => group.id === id);\n    if (groupIndex === -1) {\n      console.error(`Group with ID ${id} not found`);\n      return;\n    }\n    const group = noteGroups[groupIndex];\n    setGroupId(group.id);\n    setNotes([...group.notes], newNote);\n    console.log(group.notes);\n  }, [id, newNote, setNewNote]);\n\n  const handleNewNote = (value) => {\n    console.log(\"new note\");\n    setNewNote(value);\n    setNotes([...notes], newNote);\n  };\n\n  return (\n    <div\n      className=\"note-view-container flex  justify-start\"\n      style={{ display: isMobile && !display ? \"none\" : \"\" }}\n    >\n      <NoteHeader\n        name={name}\n        color={color}\n        isMobile={isMobile}\n        display={display}\n        setDisplay={setDisplay}\n      />\n      {groupId === id &&\n        notes &&\n        notes.map((note, index) => {\n          return (\n            <div className=\"note-view flex flex-row justify-start \" key={index}>\n              <div className=\"time-contatiner\">\n                <p className=\"date\">\n                  {note &&\n                    note.time.substring(0, 4) + note.time.substring(7, 11)}\n                </p>\n                <p className=\"time\">{note && note.date}</p>\n              </div>\n              <div className=\"note\">{note.content}</div>\n            </div>\n          );\n        })}\n        {notes && notes.length<=0 ? <p className=\"example-txt\">Start Writing Notes Here!</p> : \"\"}\n\n      <Input id={id} handleNewNote={handleNewNote} />\n    </div>\n  );\n};\n\nexport default NoteView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}